// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId         Int              @id @default(autoincrement())
  username       String           @default("user") @db.VarChar(14)
  email          String           @unique @db.VarChar(254)
  hash           String           @unique @db.VarChar(64)
  salt           String           @unique @db.VarChar(64)
  role           String           @default("user")
  // a user can have many weather components
  WeatherLayouts WeatherLayout[]
  RefreshToken   RefreshToken[]
}

// user 1-many weatherLayout
model WeatherLayout {
  weatherCompId Int
  userId        Int
  dataGrid      Json

  user User @relation(fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)

  @@id([weatherCompId, userId])
}

// refresh token database
// refreshToken 1-1 user
model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
}
